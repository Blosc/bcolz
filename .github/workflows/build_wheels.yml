name: Build Wheels

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Package Index'
        required: true
        default: 'TESTPYPI'
  release:
    types:
      - published

jobs:
  build_linux:
    name: Wheels for py${{ matrix.python }} on ${{ matrix.os }} using ${{ matrix.manylinux_image }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest ]
        python: [ 37, 38, 39 ]
        manylinux_image: [ manylinux2010, manylinux2014 ]

    steps:
      - name: Checkout bcolz
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Build and test wheels
        uses: pypa/cibuildwheel@v2.1.1
        env:
          CIBW_ARCHS_LINUX: x86_64
          CIBW_BUILD: "cp${{ matrix.python }}-*"
          CIBW_ENVIRONMENT: DISABLE_BCOLZ_AVX2=true
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux_image }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.manylinux_image }}

      - name: Store artifacts
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl

  build_macos:
    name: Wheels for py${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ macos-latest ]
        python: [ 37, 38, 39 ]

    steps:
      - name: Checkout bcolz
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.1
        env:
          CIBW_BEFORE_ALL_MACOS: brew install hdf5 c-blosc
          CIBW_BUILD: "cp${{ matrix.python }}-*"
          CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET=10.15 DISABLE_BCOLZ_AVX2=true DISABLE_BCOLZ_SSE2=true

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.8'

      - name: Build sdist
        run: pipx run --spec build pyproject-build --sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [ build_linux, build_macos, build_sdist ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: publish to testpypi
        uses: pypa/gh-action-pypi-publish@master
        if: ${{ github.event.inputs.target }} == 'TESTPYPI'
        with:
          user: __token__
          password: ${{ secrets.PYPITEST_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
      - name: publish to pypi
        uses: pypa/gh-action-pypi-publish@master
        if: ${{ github.event.inputs.target }} == 'PYPI' || (github.event_name == 'release' && github.event.action == 'published')
        #        if: startsWith(github.event.head_commit.message, 'PYPI')
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}